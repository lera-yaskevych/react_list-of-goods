{"version":3,"sources":["Button.tsx","GoodsList.tsx","BasicTask.tsx","Form.tsx","AdvancedTask.tsx","App.tsx","index.tsx"],"names":["Button","props","action","stylingClass","text","type","onClick","className","GoodsList","goods","map","good","BasicTask","state","goodsFromServer","isReversed","sortBy","reverse","setState","sort","parameter","displayGoods","displayedGoods","good1","good2","localeCompare","length","reset","this","React","Component","Form","handleChange","filter","lengthOptions","name","value","onChange","number","AdvancedTask","wordLengths","chosenLength","event","target","filterByLength","filteredGoods","App","isContentShown","showList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee625680.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  action: () => void;\n  stylingClass: string;\n  text: string;\n};\n\nexport const Button: React.FC<Props> = (props) => {\n  const { action, stylingClass, text } = props;\n\n  return (\n    <button\n      type=\"button\"\n      onClick={action}\n      className={stylingClass}\n    >\n      {text}\n    </button>\n  );\n};\n","import React from 'react';\nimport './App.css';\n\ntype Props = {\n  goods: string[];\n};\n\nexport const GoodsList: React.FC<Props> = (props) => {\n  const { goods } = props;\n\n  return (\n    <ul className=\"App__list\">\n      {goods.map(good => (\n        <li key={good} className=\"App__item\">\n          {good}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { Button } from './Button';\nimport { GoodsList } from './GoodsList';\nimport goodsFromServer from './api/goods.json';\nimport './App.css';\n\nclass BasicTask extends React.Component<{}, BasicState> {\n  state: BasicState = {\n    goods: [...goodsFromServer],\n    isReversed: false,\n    sortBy: '',\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (parameter: 'abc' | 'length') => {\n    this.setState({ sortBy: parameter });\n  };\n\n  displayGoods = () => {\n    const { goods, sortBy, isReversed } = this.state;\n    let displayedGoods = goods;\n\n    displayedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case 'abc':\n          return good1.localeCompare(good2);\n        case 'length':\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n\n    if (isReversed) {\n      displayedGoods = [...displayedGoods].reverse();\n    }\n\n    return displayedGoods;\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      goods: [...goodsFromServer],\n    });\n  };\n\n  render() {\n    const displayedGoods = this.displayGoods();\n\n    return (\n      <div className=\"App\">\n        <GoodsList goods={displayedGoods} />\n        <div className=\"App__buttons\">\n          <Button\n            action={this.reverse}\n            stylingClass=\"App__button--reverse\"\n            text=\"Reverse\"\n          />\n          <Button\n            action={() => this.sort('abc')}\n            stylingClass=\"App__button--sort-abc\"\n            text=\"Sort alphabetically\"\n          />\n          <Button\n            action={() => this.sort('length')}\n            stylingClass=\"App__button--sort-length\"\n            text=\"Sort by length\"\n          />\n          <Button\n            action={this.reset}\n            stylingClass=\"App__button--reset\"\n            text=\"Reset\"\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default BasicTask;\n","import React from 'react';\n\ninterface Props {\n  length: number;\n  handleChange: (event: React.ChangeEvent<HTMLSelectElement>) => void;\n  filter: () => string[];\n  lengthOptions: number[];\n}\n\nexport const Form: React.FC<Props> = (props) => {\n  const {\n    length,\n    handleChange,\n    filter,\n    lengthOptions,\n  } = props;\n\n  return (\n    <form>\n      <select\n        name=\"length\"\n        value={length}\n        onChange={handleChange}\n        onClick={filter}\n      >\n        {lengthOptions.map(number => (\n          <option\n            key={number}\n            value={number}\n          >\n            {number}\n          </option>\n        ))}\n      </select>\n    </form>\n  );\n};\n","import React from 'react';\nimport { Form } from './Form';\nimport { Button } from './Button';\nimport { GoodsList } from './GoodsList';\nimport goodsFromServer from './api/goods.json';\n\nclass AdvancedTask extends React.Component<{}, AdvancedState> {\n  state: AdvancedState = {\n    isReversed: false,\n    wordLengths: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\n    chosenLength: 1,\n    sortBy: '',\n    goods: [...goodsFromServer],\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({\n      chosenLength: +event.target.value,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sort = (parameter: 'abc' | 'length') => {\n    this.setState({ sortBy: parameter });\n  };\n\n  reset = () => {\n    this.setState({\n      isReversed: false,\n      sortBy: '',\n      chosenLength: 1,\n      goods: [...goodsFromServer],\n    });\n  };\n\n  filterByLength = () => {\n    const {\n      goods,\n      chosenLength,\n      isReversed,\n      sortBy,\n    } = this.state;\n    let filteredGoods = goods;\n\n    filteredGoods = goods.filter(good => good.length >= chosenLength);\n\n    if (sortBy) {\n      filteredGoods = [...filteredGoods].sort((good1, good2) => {\n        switch (sortBy) {\n          case 'abc':\n            return good1.localeCompare(good2);\n          case 'length':\n            return good1.length - good2.length;\n          default:\n            return 0;\n        }\n      });\n    }\n\n    if (isReversed) {\n      filteredGoods = [...filteredGoods].reverse();\n    }\n\n    return filteredGoods;\n  };\n\n  render() {\n    const {\n      wordLengths,\n      chosenLength,\n    } = this.state;\n    const filteredGoods = this.filterByLength();\n\n    return (\n      <div className=\"App\">\n        <>\n          <Form\n            length={chosenLength}\n            handleChange={this.handleChange}\n            filter={this.filterByLength}\n            lengthOptions={wordLengths}\n          />\n          <GoodsList goods={filteredGoods} />\n          <div className=\"App__buttons\">\n            <Button\n              action={this.reverse}\n              stylingClass=\"App__button--reverse\"\n              text=\"Reverse\"\n            />\n            <Button\n              action={() => this.sort('abc')}\n              stylingClass=\"App__button--reverse\"\n              text=\"Sort by alphabet\"\n            />\n            <Button\n              action={() => this.sort('length')}\n              stylingClass=\"App__button--reverse\"\n              text=\"Sort by length\"\n            />\n            <Button\n              action={this.reset}\n              stylingClass=\"App__button--reset\"\n              text=\"Reset\"\n            />\n          </div>\n        </>\n      </div>\n    );\n  }\n}\n\nexport default AdvancedTask;\n","import React from 'react';\nimport AppBasic from './BasicTask';\nimport AdvancedApp from './AdvancedTask';\nimport { Button } from './Button';\n\ninterface State {\n  isContentShown: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isContentShown: false,\n  };\n\n  showList = () => {\n    this.setState(state => ({\n      isContentShown: !state.isContentShown,\n    }));\n  };\n\n  render() {\n    const { isContentShown } = this.state;\n\n    return (\n      <>\n        {isContentShown ? (\n          <>\n            <AppBasic />\n            <AdvancedApp />\n          </>\n        ) : (\n          <Button\n            action={this.showList}\n            stylingClass=\"App__button--start\"\n            text=\"Start\"\n          />\n        )}\n      </>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <div className=\"container\">\n    <App />\n  </div>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}